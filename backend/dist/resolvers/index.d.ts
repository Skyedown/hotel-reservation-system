export declare const resolvers: {
    DateTime: import("graphql").GraphQLScalarType<Date, Date>;
    Query: {
        getPaymentStatus: (_: any, { accessToken }: any, { prisma }: import("../context").Context) => Promise<{
            reservationId: string;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            reservationStatus: import(".prisma/client").$Enums.ReservationStatus;
            paymentIntent: string;
            amount: number;
            payment: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                status: import(".prisma/client").$Enums.PaymentStatus;
                reservationId: string;
                amount: number;
                currency: string;
                stripePaymentIntentId: string;
                failureReason: string | null;
                refundAmount: number | null;
                webhookEventId: string | null;
            };
        }>;
        reservation: (_: any, { accessToken }: any, { prisma }: import("../context").Context) => Promise<{
            payments: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                status: import(".prisma/client").$Enums.PaymentStatus;
                reservationId: string;
                amount: number;
                currency: string;
                stripePaymentIntentId: string;
                failureReason: string | null;
                refundAmount: number | null;
                webhookEventId: string | null;
            }[];
            roomType: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                description: string;
                price: number;
                capacity: number;
                amenities: string[];
                images: string[];
                isActive: boolean;
            };
            actualRoom: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                roomTypeId: string;
                roomNumber: string;
                isAvailable: boolean;
                isUnderMaintenance: boolean;
                maintenanceNotes: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ReservationStatus;
            roomTypeId: string;
            actualRoomId: string | null;
            guestEmail: string;
            guestFirstName: string;
            guestLastName: string;
            guestPhone: string | null;
            checkIn: Date;
            checkOut: Date;
            guests: number;
            totalPrice: number;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            paymentIntentId: string | null;
            specialRequests: string | null;
            accessToken: string;
            lastStatusChange: Date;
            notes: string | null;
        }>;
        roomTypes: (_: any, __: any, { prisma }: import("../context").Context) => Promise<{
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            price: number;
            capacity: number;
            amenities: string[];
            images: string[];
            isActive: boolean;
        }[]>;
        roomType: (_: any, { id }: any, { prisma }: import("../context").Context) => Promise<{
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            price: number;
            capacity: number;
            amenities: string[];
            images: string[];
            isActive: boolean;
        }>;
        availableRoomTypes: (_: any, { checkIn, checkOut, guests }: any, { prisma }: import("../context").Context) => Promise<{
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            price: number;
            capacity: number;
            amenities: string[];
            images: string[];
            isActive: boolean;
        }[]>;
        actualRooms: (_: any, __: any, { admin, prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            roomTypeId: string;
            roomNumber: string;
            isAvailable: boolean;
            isUnderMaintenance: boolean;
            maintenanceNotes: string | null;
        }[]>;
        actualRoom: (_: any, { id }: any, { admin, prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            roomTypeId: string;
            roomNumber: string;
            isAvailable: boolean;
            isUnderMaintenance: boolean;
            maintenanceNotes: string | null;
        }>;
        actualRoomsByType: (_: any, { roomTypeId }: any, { admin, prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            roomTypeId: string;
            roomNumber: string;
            isAvailable: boolean;
            isUnderMaintenance: boolean;
            maintenanceNotes: string | null;
        }[]>;
        availableActualRooms: (_: any, { roomTypeId, checkIn, checkOut, excludeReservationIds }: any, { admin, prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            roomTypeId: string;
            roomNumber: string;
            isAvailable: boolean;
            isUnderMaintenance: boolean;
            maintenanceNotes: string | null;
        }[]>;
        me: (_: any, __: any, { admin }: import("../context").Context) => Promise<{
            id: string;
            email: string;
            password: string;
            firstName: string;
            lastName: string;
            phoneNumber: string | null;
            role: import(".prisma/client").$Enums.AdminRole;
            createdAt: Date;
            updatedAt: Date;
        }>;
        allReservations: (_: any, __: any, { admin, prisma }: import("../context").Context) => Promise<({
            payments: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                status: import(".prisma/client").$Enums.PaymentStatus;
                reservationId: string;
                amount: number;
                currency: string;
                stripePaymentIntentId: string;
                failureReason: string | null;
                refundAmount: number | null;
                webhookEventId: string | null;
            }[];
            roomType: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                description: string;
                price: number;
                capacity: number;
                amenities: string[];
                images: string[];
                isActive: boolean;
            };
            actualRoom: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                roomTypeId: string;
                roomNumber: string;
                isAvailable: boolean;
                isUnderMaintenance: boolean;
                maintenanceNotes: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ReservationStatus;
            roomTypeId: string;
            actualRoomId: string | null;
            guestEmail: string;
            guestFirstName: string;
            guestLastName: string;
            guestPhone: string | null;
            checkIn: Date;
            checkOut: Date;
            guests: number;
            totalPrice: number;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            paymentIntentId: string | null;
            specialRequests: string | null;
            accessToken: string;
            lastStatusChange: Date;
            notes: string | null;
        })[]>;
        reservationById: (_: any, { id }: any, { admin, prisma }: import("../context").Context) => Promise<{
            payments: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                status: import(".prisma/client").$Enums.PaymentStatus;
                reservationId: string;
                amount: number;
                currency: string;
                stripePaymentIntentId: string;
                failureReason: string | null;
                refundAmount: number | null;
                webhookEventId: string | null;
            }[];
            roomType: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                description: string;
                price: number;
                capacity: number;
                amenities: string[];
                images: string[];
                isActive: boolean;
            };
            actualRoom: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                roomTypeId: string;
                roomNumber: string;
                isAvailable: boolean;
                isUnderMaintenance: boolean;
                maintenanceNotes: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ReservationStatus;
            roomTypeId: string;
            actualRoomId: string | null;
            guestEmail: string;
            guestFirstName: string;
            guestLastName: string;
            guestPhone: string | null;
            checkIn: Date;
            checkOut: Date;
            guests: number;
            totalPrice: number;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            paymentIntentId: string | null;
            specialRequests: string | null;
            accessToken: string;
            lastStatusChange: Date;
            notes: string | null;
        }>;
    };
    Mutation: {
        createPaymentIntent: (_: any, { accessToken }: any, { prisma }: import("../context").Context) => Promise<string>;
        processRefund: (_: any, { reservationId, amount, reason }: any, { admin, prisma }: import("../context").Context) => Promise<{
            id: string;
            amount: number;
            status: string;
            reason: import("stripe").Stripe.Refund.Reason;
        }>;
        createMultiRoomReservation: (_: any, { input }: any, { prisma }: import("../context").Context) => Promise<any[]>;
        createReservation: (_: any, { input }: any, { prisma }: import("../context").Context) => Promise<{
            payments: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                status: import(".prisma/client").$Enums.PaymentStatus;
                reservationId: string;
                amount: number;
                currency: string;
                stripePaymentIntentId: string;
                failureReason: string | null;
                refundAmount: number | null;
                webhookEventId: string | null;
            }[];
            roomType: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                description: string;
                price: number;
                capacity: number;
                amenities: string[];
                images: string[];
                isActive: boolean;
            };
            actualRoom: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                roomTypeId: string;
                roomNumber: string;
                isAvailable: boolean;
                isUnderMaintenance: boolean;
                maintenanceNotes: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ReservationStatus;
            roomTypeId: string;
            actualRoomId: string | null;
            guestEmail: string;
            guestFirstName: string;
            guestLastName: string;
            guestPhone: string | null;
            checkIn: Date;
            checkOut: Date;
            guests: number;
            totalPrice: number;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            paymentIntentId: string | null;
            specialRequests: string | null;
            accessToken: string;
            lastStatusChange: Date;
            notes: string | null;
        }>;
        cancelReservation: (_: any, { accessToken }: any, { prisma }: import("../context").Context) => Promise<{
            payments: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                status: import(".prisma/client").$Enums.PaymentStatus;
                reservationId: string;
                amount: number;
                currency: string;
                stripePaymentIntentId: string;
                failureReason: string | null;
                refundAmount: number | null;
                webhookEventId: string | null;
            }[];
            roomType: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                description: string;
                price: number;
                capacity: number;
                amenities: string[];
                images: string[];
                isActive: boolean;
            };
            actualRoom: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                roomTypeId: string;
                roomNumber: string;
                isAvailable: boolean;
                isUnderMaintenance: boolean;
                maintenanceNotes: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ReservationStatus;
            roomTypeId: string;
            actualRoomId: string | null;
            guestEmail: string;
            guestFirstName: string;
            guestLastName: string;
            guestPhone: string | null;
            checkIn: Date;
            checkOut: Date;
            guests: number;
            totalPrice: number;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            paymentIntentId: string | null;
            specialRequests: string | null;
            accessToken: string;
            lastStatusChange: Date;
            notes: string | null;
        }>;
        createRoomType: (_: any, { input }: any, { admin, prisma }: import("../context").Context) => Promise<{
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            price: number;
            capacity: number;
            amenities: string[];
            images: string[];
            isActive: boolean;
        }>;
        updateRoomType: (_: any, { id, input }: any, { admin, prisma }: import("../context").Context) => Promise<{
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            price: number;
            capacity: number;
            amenities: string[];
            images: string[];
            isActive: boolean;
        }>;
        deleteRoomType: (_: any, { id }: any, { admin, prisma }: import("../context").Context) => Promise<boolean>;
        createActualRoom: (_: any, { input }: any, { admin, prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            roomTypeId: string;
            roomNumber: string;
            isAvailable: boolean;
            isUnderMaintenance: boolean;
            maintenanceNotes: string | null;
        }>;
        updateActualRoom: (_: any, { id, input }: any, { admin, prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            roomTypeId: string;
            roomNumber: string;
            isAvailable: boolean;
            isUnderMaintenance: boolean;
            maintenanceNotes: string | null;
        }>;
        deleteActualRoom: (_: any, { id }: any, { admin, prisma }: import("../context").Context) => Promise<boolean>;
        assignRoomToReservation: (_: any, { reservationId, actualRoomId }: any, { admin, prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ReservationStatus;
            roomTypeId: string;
            actualRoomId: string | null;
            guestEmail: string;
            guestFirstName: string;
            guestLastName: string;
            guestPhone: string | null;
            checkIn: Date;
            checkOut: Date;
            guests: number;
            totalPrice: number;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            paymentIntentId: string | null;
            specialRequests: string | null;
            accessToken: string;
            lastStatusChange: Date;
            notes: string | null;
        }>;
        adminLogin: (_: any, { input }: any, { prisma }: import("../context").Context) => Promise<{
            token: string;
            admin: {
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                phoneNumber: string | null;
                role: import(".prisma/client").$Enums.AdminRole;
                createdAt: Date;
                updatedAt: Date;
            };
        }>;
        updateReservationStatus: (_: any, { id, status }: any, { admin, prisma }: import("../context").Context) => Promise<{
            payments: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                status: import(".prisma/client").$Enums.PaymentStatus;
                reservationId: string;
                amount: number;
                currency: string;
                stripePaymentIntentId: string;
                failureReason: string | null;
                refundAmount: number | null;
                webhookEventId: string | null;
            }[];
            roomType: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                description: string;
                price: number;
                capacity: number;
                amenities: string[];
                images: string[];
                isActive: boolean;
            };
            actualRoom: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                roomTypeId: string;
                roomNumber: string;
                isAvailable: boolean;
                isUnderMaintenance: boolean;
                maintenanceNotes: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ReservationStatus;
            roomTypeId: string;
            actualRoomId: string | null;
            guestEmail: string;
            guestFirstName: string;
            guestLastName: string;
            guestPhone: string | null;
            checkIn: Date;
            checkOut: Date;
            guests: number;
            totalPrice: number;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            paymentIntentId: string | null;
            specialRequests: string | null;
            accessToken: string;
            lastStatusChange: Date;
            notes: string | null;
        }>;
    };
    Admin: {};
    RoomType: {
        rooms: (parent: any, _: any, { prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            roomTypeId: string;
            roomNumber: string;
            isAvailable: boolean;
            isUnderMaintenance: boolean;
            maintenanceNotes: string | null;
        }[]>;
        reservations: (parent: any, _: any, { prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ReservationStatus;
            roomTypeId: string;
            actualRoomId: string | null;
            guestEmail: string;
            guestFirstName: string;
            guestLastName: string;
            guestPhone: string | null;
            checkIn: Date;
            checkOut: Date;
            guests: number;
            totalPrice: number;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            paymentIntentId: string | null;
            specialRequests: string | null;
            accessToken: string;
            lastStatusChange: Date;
            notes: string | null;
        }[]>;
    };
    ActualRoom: {
        roomType: (parent: any, _: any, { prisma }: import("../context").Context) => Promise<{
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            price: number;
            capacity: number;
            amenities: string[];
            images: string[];
            isActive: boolean;
        }>;
        reservations: (parent: any, _: any, { prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ReservationStatus;
            roomTypeId: string;
            actualRoomId: string | null;
            guestEmail: string;
            guestFirstName: string;
            guestLastName: string;
            guestPhone: string | null;
            checkIn: Date;
            checkOut: Date;
            guests: number;
            totalPrice: number;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            paymentIntentId: string | null;
            specialRequests: string | null;
            accessToken: string;
            lastStatusChange: Date;
            notes: string | null;
        }[]>;
    };
    Reservation: {
        roomType: (parent: any, _: any, { prisma }: import("../context").Context) => Promise<{
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string;
            price: number;
            capacity: number;
            amenities: string[];
            images: string[];
            isActive: boolean;
        }>;
        actualRoom: (parent: any, _: any, { prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            roomTypeId: string;
            roomNumber: string;
            isAvailable: boolean;
            isUnderMaintenance: boolean;
            maintenanceNotes: string | null;
        }>;
        payments: (parent: any, _: any, { prisma }: import("../context").Context) => Promise<{
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.PaymentStatus;
            reservationId: string;
            amount: number;
            currency: string;
            stripePaymentIntentId: string;
            failureReason: string | null;
            refundAmount: number | null;
            webhookEventId: string | null;
        }[]>;
    };
    Payment: {
        reservation: (parent: any, _: any, { prisma }: import("../context").Context) => Promise<{
            roomType: {
                name: string;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                description: string;
                price: number;
                capacity: number;
                amenities: string[];
                images: string[];
                isActive: boolean;
            };
            actualRoom: {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                roomTypeId: string;
                roomNumber: string;
                isAvailable: boolean;
                isUnderMaintenance: boolean;
                maintenanceNotes: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            status: import(".prisma/client").$Enums.ReservationStatus;
            roomTypeId: string;
            actualRoomId: string | null;
            guestEmail: string;
            guestFirstName: string;
            guestLastName: string;
            guestPhone: string | null;
            checkIn: Date;
            checkOut: Date;
            guests: number;
            totalPrice: number;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            paymentIntentId: string | null;
            specialRequests: string | null;
            accessToken: string;
            lastStatusChange: Date;
            notes: string | null;
        }>;
    };
};
//# sourceMappingURL=index.d.ts.map